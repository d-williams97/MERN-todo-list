{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Todos from './components/todos/Todos';\nimport AddPopUp from './components/addPopUp/AddPopUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:3001';\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]); // \n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`).then(res => res.json()).then(data => setTodos(data)).catch(err => console.error('Error:', err));\n  };\n\n  // --- Checking off todo --- //\n\n  const markTodoHandler = async id => {\n    // fetches data of select todo\n    console.log('clicked');\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n    .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n    .catch(err => console.error('Error: ', err));\n    setTodos(prevTodos => prevTodos.map(todo => {\n      // mapping over todos getting the prev state\n      if (todo._id === data._id) {\n        // checking for selected todo\n        todo.complete = data.complete; // changing selected todo complete property\n      }\n\n      return todo; // returns the update todos.\n    }));\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async id => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: 'DELETE'\n    }).then(res => res.json()).catch(err => console.error('Error: ', err));\n    setTodos(prevTodos => prevTodos.filter(todo => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n  };\n\n  // --- Adding a Todo --- //\n\n  const addTodoHandler = async () => {\n    const data = await fetch(`${API_BASE}/todo/new`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": 'application/json' // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n      },\n\n      body: JSON.stringify({\n        // converts the todo value (a string) into JSON data.\n        text: newTodo\n      })\n    }).then(res => res.json());\n    setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n    setPopupActive(false);\n    setNewTodo('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Daniel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      deleteTodoHandler: deleteTodoHandler,\n      markTodoHandler: markTodoHandler,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addPopUp\",\n      onClick: () => {\n        setPopupActive(true);\n      },\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopUp\",\n        onClick: () => {\n          setPopupActive(false);\n        },\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => {\n            setNewTodo(e.target.value);\n          },\n          value: newTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => addTodoHandler(),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eNtdqlSs2imUAPebFn8tqh5KksU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Todos","AddPopUp","jsxDEV","_jsxDEV","API_BASE","App","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","getTodos","console","log","fetch","then","res","json","data","catch","err","error","markTodoHandler","id","prevTodos","map","todo","_id","complete","deleteTodoHandler","method","filter","addTodoHandler","headers","body","JSON","stringify","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport Todos from './components/todos/Todos'\nimport AddPopUp from './components/addPopUp/AddPopUp';\n\nconst API_BASE = 'http://localhost:3001'\n\n\n\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]); // \n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n\n\nuseEffect(() => {\n  getTodos();\n  console.log(todos)\n }, []) //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n\n\n const getTodos = () => { // Gets the todo data from mongoDB database.\n  fetch(`${API_BASE}/todos`)\n  .then(res => res.json())\n  .then(data => setTodos(data))\n  .catch(err => console.error('Error:', err))\n }\n\n\n// --- Checking off todo --- //\n\n const markTodoHandler = async id => { // fetches data of select todo\n  console.log('clicked')\n  const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n  .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n  .catch(err => console.error('Error: ', err))\n\n  setTodos(prevTodos => prevTodos.map(todo => { // mapping over todos getting the prev state\n    if(todo._id === data._id) { // checking for selected todo\n      todo.complete = data.complete // changing selected todo complete property\n    }\n    return todo // returns the update todos.\n  }))\n}\n\n\n\n// --- Deleting Todos --- //\n\nconst deleteTodoHandler = async id => {\n  const data = await fetch (`${API_BASE}/todo/delete/${id}`,{\n    method: 'DELETE'\n  })\n  .then(res => res.json())\n  .catch(err => console.error('Error: ', err))\n\n  setTodos(prevTodos => prevTodos.filter(todo => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n\n}\n\n// --- Adding a Todo --- //\n\nconst addTodoHandler = async () => { \n  const data = await fetch(`${API_BASE}/todo/new`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": 'application/json' // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n    },\n    body: JSON.stringify({ // converts the todo value (a string) into JSON data.\n      text: newTodo\n    })\n  }).then(res => res.json());\n\n  setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n  setPopupActive(false);\n  setNewTodo('');\n}\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome Daniel</h1>\n      <h4>Your tasks</h4>\n\n<Todos \ndeleteTodoHandler={deleteTodoHandler}\nmarkTodoHandler={markTodoHandler}\ntodos={todos}/>\n\n\n{/* make todos pop-up component  */}\n<div className='addPopUp' onClick={() => {setPopupActive(true);}}>+</div>\n\n{/* make pop-up modal component  */}\n{popupActive ? (\n  <div className='popUp'>\n    <div className='closePopUp' onClick={ () => {\n      setPopupActive(false);}}>x</div>\n    <div className='content'>\n\n      <h3>Add task</h3>\n      <input type=\"text\" \n      className='add-todo-input'\n      onChange={ e => {setNewTodo(e.target.value)}}\n      value={newTodo} /> {/*value is bound to newTodo value*/}\n      <div className=\"button\" onClick={() => addTodoHandler()}>Create Task</div>\n\n    </div>\n  </div>\n): ''}\n\n\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
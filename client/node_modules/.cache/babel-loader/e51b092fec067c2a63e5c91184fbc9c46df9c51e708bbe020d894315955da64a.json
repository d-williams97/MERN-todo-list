{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = 'http://localhost:3001';\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]); // \n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`).then(res => res.json()).then(data => setTodos(data)).catch(err => console.error('Error:', err));\n  };\n\n  // --- Checking off todo --- //\n\n  const todoOnClickHandler = async id => {\n    // fetches data of select todo\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n    .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n    .catch(err => console.error('Error: ', err));\n    setTodos(prevTodos => prevTodos.map(todo => {\n      // mapping over todos getting the prev state\n      if (todo._id === data._id) {\n        // checking for selected todo\n        todo.complete = data.complete; // changing selected todo complete property\n      }\n\n      return todo; // returns the update todos.\n    }));\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async id => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: 'DELETE'\n    }).then(res => res.json()).catch(err => console.error('Error: ', err));\n    setTodos(prevTodos => {\n      prevTodos.filter(todo => {\n        console.log(todo);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Daniel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `todo ${todo.complete ? 'is-complete' : ''}`,\n        onClick: () => todoOnClickHandler(todo._id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text\",\n          children: todo.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-todo\",\n          onClick: () => deleteTodoHandler(todo._id),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this)]\n      }, todo._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"eNtdqlSs2imUAPebFn8tqh5KksU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","API_BASE","App","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","getTodos","console","log","fetch","then","res","json","data","catch","err","error","todoOnClickHandler","id","prevTodos","map","todo","_id","complete","deleteTodoHandler","method","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.js"],"sourcesContent":["import {useState, useEffect} from 'react';\n\nconst API_BASE = 'http://localhost:3001'\n\n\n\n\nfunction App() {\n\n  const [todos, setTodos] = useState([]); // \n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState('');\n\n\nuseEffect(() => {\n  getTodos();\n  console.log(todos)\n }, []) //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n\n\n const getTodos = () => { // Gets the todo data from mongoDB database.\n  fetch(`${API_BASE}/todos`)\n  .then(res => res.json())\n  .then(data => setTodos(data))\n  .catch(err => console.error('Error:', err))\n }\n\n\n// --- Checking off todo --- //\n\n const todoOnClickHandler = async id => { // fetches data of select todo\n  const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n  .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n  .catch(err => console.error('Error: ', err))\n\n  setTodos(prevTodos => prevTodos.map(todo => { // mapping over todos getting the prev state\n    if(todo._id === data._id) { // checking for selected todo\n      todo.complete = data.complete // changing selected todo complete property\n    }\n    return todo // returns the update todos.\n  }))\n}\n\n\n\n// --- Deleting Todos --- //\n\nconst deleteTodoHandler = async id => {\n  const data = await fetch (`${API_BASE}/todo/delete/${id}`,{\n    method: 'DELETE',\n  })\n  .then(res => res.json())\n  .catch(err => console.error('Error: ', err))\n\n\n  setTodos((prevTodos) => {\n    prevTodos.filter((todo) => {\n      console.log(todo)\n    })\n  })\n\n}\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome Daniel</h1>\n      <h4>Your tasks</h4>\n\n      <div className=\"todos\">\n        {todos.map(todo => (\n                <div className={`todo ${todo.complete ? 'is-complete' : ''}` } \n                key={todo._id}\n                onClick={() => todoOnClickHandler(todo._id)} >\n                <div className=\"check-box\"></div>\n                <div className=\"text\">{todo.text}</div>\n                <div className=\"delete-todo\" onClick={ () => deleteTodoHandler(todo._id)}>x</div>\n              </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
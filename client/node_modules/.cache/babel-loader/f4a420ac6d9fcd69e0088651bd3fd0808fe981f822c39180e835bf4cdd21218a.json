{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./components/todos/Todos\";\nimport AddPopUp from \"./components/addPopUp/AddPopUp\";\nimport PopUpModal from \"./components/popUpModal/PopUpModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]); //\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const addPopUpStateHandler = () => {\n    // passing the state down to addPopUp\n    setPopupActive(true);\n  };\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`).then(res => res.json()).then(data => setTodos(data)).catch(err => console.error(\"Error:\", err));\n  };\n\n  // --- Checking off todo --- //\n\n  const markTodoHandler = async id => {\n    // fetches data of select todo\n    console.log(\"clicked\");\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n    .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n    .catch(err => console.error(\"Error: \", err));\n    setTodos(prevTodos => prevTodos.map(todo => {\n      // mapping over todos getting the prev state\n      if (todo._id === data._id) {\n        // checking for selected todo\n        todo.complete = data.complete; // changing selected todo complete property\n      }\n\n      return todo; // returns the update todos.\n    }));\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async id => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).catch(err => console.error(\"Error: \", err));\n    setTodos(prevTodos => prevTodos.filter(todo => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n  };\n\n  // --- Adding a Todo --- //\n\n  const addTodoHandler = async () => {\n    const data = await fetch(`${API_BASE}/todo/new`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n      },\n\n      body: JSON.stringify({\n        // converts the todo value (a string) into JSON data.\n        text: newTodo\n      })\n    }).then(res => res.json());\n    setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Daniel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      deleteTodoHandler: deleteTodoHandler,\n      markTodoHandler: markTodoHandler,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPopUp, {\n      addPopUpState: addPopUpStateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popUp\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"closePopUp\",\n        onClick: () => {\n          setPopupActive(false);\n        },\n        children: \"x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Add task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"add-todo-input\",\n          onChange: e => {\n            setNewTodo(e.target.value);\n          },\n          value: newTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => addTodoHandler(),\n          children: \"Create Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hBaeT8MXYiBrK1sejsTqGWSgcfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Todos","AddPopUp","PopUpModal","jsxDEV","_jsxDEV","API_BASE","App","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","getTodos","console","log","addPopUpStateHandler","fetch","then","res","json","data","catch","err","error","markTodoHandler","id","prevTodos","map","todo","_id","complete","deleteTodoHandler","method","filter","addTodoHandler","headers","body","JSON","stringify","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addPopUpState","onClick","type","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Todos from \"./components/todos/Todos\";\nimport AddPopUp from \"./components/addPopUp/AddPopUp\";\nimport PopUpModal from \"./components/popUpModal/PopUpModal\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const addPopUpStateHandler = () => {\n    // passing the state down to addPopUp\n    setPopupActive(true);\n  };\n\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`)\n      .then((res) => res.json())\n      .then((data) => setTodos(data))\n      .catch((err) => console.error(\"Error:\", err));\n  };\n\n  // --- Checking off todo --- //\n\n  const markTodoHandler = async (id) => {\n    // fetches data of select todo\n    console.log(\"clicked\");\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n      .then((res) => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n      .catch((err) => console.error(\"Error: \", err));\n\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) => {\n        // mapping over todos getting the prev state\n        if (todo._id === data._id) {\n          // checking for selected todo\n          todo.complete = data.complete; // changing selected todo complete property\n        }\n        return todo; // returns the update todos.\n      })\n    );\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async (id) => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .catch((err) => console.error(\"Error: \", err));\n\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n  };\n\n  // --- Adding a Todo --- //\n\n  const addTodoHandler = async () => {\n    const data = await fetch(`${API_BASE}/todo/new`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\", // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n      },\n      body: JSON.stringify({\n        // converts the todo value (a string) into JSON data.\n        text: newTodo,\n      }),\n    }).then((res) => res.json());\n\n    setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome Daniel</h1>\n      <h4>Your tasks</h4>\n\n      <Todos\n        deleteTodoHandler={deleteTodoHandler}\n        markTodoHandler={markTodoHandler}\n        todos={todos}\n      />\n\n      <AddPopUp addPopUpState={addPopUpStateHandler} />\n\n\n\n      {/* make pop-up modal component  */}\n      {popupActive ? (\n        <div className=\"popUp\">\n          <div\n            className=\"closePopUp\"\n            onClick={() => {\n              setPopupActive(false);\n            }}\n          >\n            x\n          </div>\n          <div className=\"content\">\n            <h3>Add task</h3>\n            <input\n              type=\"text\"\n              className=\"add-todo-input\"\n              onChange={(e) => {\n                setNewTodo(e.target.value);\n              }}\n              value={newTodo}\n            />{\" \"}\n            {/*value is bound to newTodo value*/}\n            <div className=\"button\" onClick={() => addTodoHandler()}>\n              Create Task\n            </div>\n          </div>\n        </div>\n      ) : (\n        \"\"\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport Todos from \"./components/todos/Todos\";\nimport AddPopUp from \"./components/addPopUp/AddPopUp\";\nimport PopUpModal from \"./components/popUpModal/PopUpModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:3001\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]); //\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const addPopUpStateHandler = () => {\n    // passing the state down to addPopUp\n    setPopupActive(true);\n  };\n  const closePopUpHandler = () => {\n    setPopupActive(false);\n  };\n  const setTodoHandler = value => {\n    setNewTodo(value); // pass down function to set state\n  };\n\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`).then(res => res.json()).then(data => setTodos(data)).catch(err => console.error(\"Error:\", err));\n  };\n\n  // --- Checking off todo --- //\n\n  const markTodoHandler = async id => {\n    // fetches data of select todo\n    console.log(\"clicked\");\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n    .then(res => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n    .catch(err => console.error(\"Error: \", err));\n    setTodos(prevTodos => prevTodos.map(todo => {\n      // mapping over todos getting the prev state\n      if (todo._id === data._id) {\n        // checking for selected todo\n        todo.complete = data.complete; // changing selected todo complete property\n      }\n\n      return todo; // returns the update todos.\n    }));\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async id => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: \"DELETE\"\n    }).then(res => res.json()).catch(err => console.error(\"Error: \", err));\n    setTodos(prevTodos => prevTodos.filter(todo => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n  };\n\n  // --- Adding a Todo --- //\n\n  const addTodoHandler = async () => {\n    const data = await fetch(`${API_BASE}/todo/new`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\" // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n      },\n\n      body: JSON.stringify({\n        // converts the todo value (a string) into JSON data.\n        text: newTodo\n      })\n    }).then(res => res.json());\n    setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome Daniel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Your tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      deleteTodoHandler: deleteTodoHandler,\n      markTodoHandler: markTodoHandler,\n      todos: todos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPopUp, {\n      addPopUpState: addPopUpStateHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), popupActive ? /*#__PURE__*/_jsxDEV(PopUpModal, {\n      closeModal: closePopUpHandler,\n      setTodoHandler: setTodoHandler,\n      newTodo: newTodo,\n      addTodoHandler: addTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"hBaeT8MXYiBrK1sejsTqGWSgcfw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Todos","AddPopUp","PopUpModal","jsxDEV","_jsxDEV","API_BASE","App","_s","todos","setTodos","popupActive","setPopupActive","newTodo","setNewTodo","getTodos","console","log","addPopUpStateHandler","closePopUpHandler","setTodoHandler","value","fetch","then","res","json","data","catch","err","error","markTodoHandler","id","prevTodos","map","todo","_id","complete","deleteTodoHandler","method","filter","addTodoHandler","headers","body","JSON","stringify","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","addPopUpState","closeModal","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/React Todo/client/src/App.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport Todos from \"./components/todos/Todos\";\nimport AddPopUp from \"./components/addPopUp/AddPopUp\";\nimport PopUpModal from \"./components/popUpModal/PopUpModal\";\n\nconst API_BASE = \"http://localhost:3001\";\n\nfunction App() {\n  const [todos, setTodos] = useState([]); //\n  const [popupActive, setPopupActive] = useState(false);\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  useEffect(() => {\n    getTodos();\n    console.log(todos);\n  }, []); //Is used for side effects. This is only called once when component mounts since the second argument is an empty dependancy array.\n\n  const addPopUpStateHandler = () => {\n    // passing the state down to addPopUp\n    setPopupActive(true);\n  };\n\n  const closePopUpHandler = () => {\n    setPopupActive(false)\n  }\n\n  const setTodoHandler = (value) => {\n    setNewTodo(value); // pass down function to set state\n  \n  }\n\n  const getTodos = () => {\n    // Gets the todo data from mongoDB database.\n    fetch(`${API_BASE}/todos`)\n      .then((res) => res.json())\n      .then((data) => setTodos(data))\n      .catch((err) => console.error(\"Error:\", err));\n  };\n\n  // --- Checking off todo --- //\n\n  const markTodoHandler = async (id) => {\n    // fetches data of select todo\n    console.log(\"clicked\");\n    const data = await fetch(`${API_BASE}/todo/complete/${id}`) // we use await to get the data after the response has processed in the server.\n      .then((res) => res.json()) // we use aysnch await below to precess data since we did not use another .then() to handle the processed data from the response\n      .catch((err) => console.error(\"Error: \", err));\n\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) => {\n        // mapping over todos getting the prev state\n        if (todo._id === data._id) {\n          // checking for selected todo\n          todo.complete = data.complete; // changing selected todo complete property\n        }\n        return todo; // returns the update todos.\n      })\n    );\n  };\n\n  // --- Deleting Todos --- //\n\n  const deleteTodoHandler = async (id) => {\n    const data = await fetch(`${API_BASE}/todo/delete/${id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => res.json())\n      .catch((err) => console.error(\"Error: \", err));\n\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo._id !== data._id)); //return todos whose ID does not equal the id of the deleted todo\n  };\n\n  // --- Adding a Todo --- //\n\n  const addTodoHandler = async () => {\n    const data = await fetch(`${API_BASE}/todo/new`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\", // sets the content type header of the request. It informs the server that the req body contains JSON DATA\n      },\n      body: JSON.stringify({\n        // converts the todo value (a string) into JSON data.\n        text: newTodo,\n      }),\n    }).then((res) => res.json());\n\n    setTodos([...todos, data]); // adding the new data object to the current array of todo objects.\n    setPopupActive(false);\n    setNewTodo(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome Daniel</h1>\n      <h4>Your tasks</h4>\n\n      <Todos\n        deleteTodoHandler={deleteTodoHandler}\n        markTodoHandler={markTodoHandler}\n        todos={todos}\n      />\n\n      <AddPopUp addPopUpState={addPopUpStateHandler} />\n\n      {/* make pop-up modal component  */}\n      {popupActive ? (\n        <PopUpModal\n        closeModal={closePopUpHandler}\n        setTodoHandler={setTodoHandler}\n        newTodo={newTodo}\n        addTodoHandler={addTodoHandler} />\n      ) : (\n        \"\"\n      )}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}